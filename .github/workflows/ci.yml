name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        compiler:
          - { name: gcc, command: gcc }

    runs-on: ${{ matrix.os }}

    env:
      PROJECT_SOURCE_DIR: ${{ github.workspace }}/lab04dz/hello_world # Исправленный путь

    steps:
      - name: Sleep for 5 seconds (Windows workaround)
        if: runner.os == 'Windows'
        shell: powershell
        run: Start-Sleep -Seconds 5

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # Shallow clone
          lfs: false
          submodules: false

      - name: List files in workspace
        shell: bash
        run: |
          echo "Files in ${{ github.workspace }}:"
          ls -la ${{ github.workspace }}
          echo "Files in $PROJECT_SOURCE_DIR:"
          ls -la $PROJECT_SOURCE_DIR

      - name: Set up environment - Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++

      - name: Set up environment - Visual Studio
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          init_bat: true

      - name: Configure CMake
        shell: bash
        run: |
          cmake -S $PROJECT_SOURCE_DIR -B $PROJECT_SOURCE_DIR/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/hello_world/build
          key: ${{ runner.os }}-${{ hashFiles('hello_world/CMakeLists.txt') }}

      - name: Build
        shell: bash
        run: |
          cmake --build $PROJECT_SOURCE_DIR/build --config Release

      - name: Run Tests
        shell: bash
        run: |
          $PROJECT_SOURCE_DIR/build/hello_world
